---

- name: Set SELinux booleans for nginx
  command: "setsebool -P {{ item }} on"
  with_items:
    - httpd_setrlimit

- name: Nginx cache directory exists
  file:
    path: /var/lib/nginx/cache
    state: directory
    owner: nginx
    group: nginx

- name: Diffie Hellman ephemeral parameters
  command: openssl dhparam -out dhparam.pem 4096
  args:
    chdir: "{{ nginx_cert_path }}"
    creates: "{{ nginx_cert_path }}/dhparam.pem"

- name: Diffie Hellman ephemeral parameters permissions
  file:
    path: "{{ nginx_cert_path }}/dhparam.pem"
    state: file
    mode: 0640
    owner: nginx
    group: wheel

- name: Nginx Config
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    mode: 0644
    owner: root
    group: wheel

- name: Includes directory exists
  file:
    path: /etc/nginx/includes
    state: directory
    recurse: yes
    mode: 0755
    owner: nginx
    group: wheel

- name: Set SELinux context for includes directory
  shell: |
    semanage fcontext -a -t httpd_config_t "/etc/nginx/includes(/.*)"
    restorecon -rv "/etc/nginx/includes"

- name: ACME challenge directory exists
  file:
    path: "{{ nginx_acme_challenge_dir }}/.well-known/acme-challenge"
    state: directory
    recurse: yes
    mode: 2775
    owner: nginx
    group: wheel

- name: Set default SELinux context for ACME challenge
  command: >
    semanage fcontext -a -t httpd_sys_rw_content_t  "{{ nginx_acme_challenge_dir }}(/.*)?"

- name: Restore default SELinux context for ACME challenge
  command: >
    restorecon -rv {{ nginx_acme_challenge_dir }}

- name: Run nginx on boot
  service:
    name: nginx
    state: started
    enabled: yes

- include: configure-sites.yml
  with_items:
    - "{{ nginx_sites }}"
  loop_control:
    loop_var: nginx_site
  tags:
  - nginx_configure
  - nginx_configure_sites
  when: ((nginx_sites is defined) and (nginx_sites is not none))
