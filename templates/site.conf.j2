{% if nginx_site.upstreams is defined %}
{% for upstream in nginx_site.upstreams %}
upstream {{ upstream.name }} {
{% for server in upstream.servers %}
  server             {{ server }};
}
{% endfor %}
{% endfor %}
{% endif %}

server {
  listen              80;
  server_name         {{ nginx_site.name }};

  # ACME challenge
  location /.well-known/acme-challenge {
    alias {{ nginx_acme_challenge_dir }}/.well-known/acme-challenge;
  }

  # root
  location / {
    return 301 https://$host$request_uri;
  }
}

{% if nginx_privkeystat.stat.exists and nginx_fullchainstat.stat.exists %}
server {
  listen              443;
  server_name         {{ nginx_site.name }};

  ssl                 on;
  ssl_certificate     {{ nginx_cert_path }}/{{ nginx_site.cert_name | default(nginx_site.name) }}/fullchain.pem;
  ssl_certificate_key {{ nginx_key_path }}/{{ nginx_site.cert_name | default(nginx_site.name) }}/privkey.pem;
  access_log          /var/log/nginx/{{ nginx_site.name }}.access.log;
  error_log          /var/log/nginx/{{ nginx_site.name }}.error.log;

  # Global Proxy settings for this server_name
  proxy_set_header    Host $host;
  proxy_set_header    X-Real-IP $remote_addr;
  proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header    X-Forwarded-Proto $scheme;
  proxy_cache_valid 200 301 302 401 403 404 5m;
  proxy_cache_bypass $no_cache $http_cache_control;
  proxy_cache_revalidate  on;
  proxy_cache cache;

{% if nginx_site.app_include|default(false) %}
  # Application provided config for /srv/{{ nginx_site.app_include }}
  include "/srv/{{ nginx_site.app_include }}/etc/nginx.conf";
{% endif %}

{% if (nginx_site.robots is defined) %}
{% if nginx_site.robots == "disallow" %}
  # robots.txt overlay
  location =/robots.txt {
    alias             /srv/robots/robots.disallow.txt;
  }
{% elif nginx_site.robots == "dspace" %}
  # robots.txt overlay
  location =/robots.txt {
    alias             /srv/robots/robots.dspace.txt;
  }
{% endif %}
{% endif %}
{% if (nginx_site.redirect_locations is defined) %}
{% for redirect_location in nginx_site.redirect_locations %}

  # Redirect {{ redirect_location.src }} to {{ redirect_location.dest }}
  location {{ redirect_location.src }} {
    return {{ redirect_location.code }} {{ redirect_location.dest }};
  }
{% endfor %}
{% endif %}
{% if nginx_site.upstreams is defined %}
{% for upstream in nginx_site.upstreams %}

  # {{ upstream.name }}
{% for location in upstream.locations %}

  # {{ location }}
  location {{ location }} {
    # Make sure we keep this nginx setting intact
    add_header        X-Content-Type-Options nosniff;
    proxy_pass        https://{{ upstream.name }}{{ location }};
  }
{% endfor %}
{% endfor %}
{% endif %}
}
{% endif %}
