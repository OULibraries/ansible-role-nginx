---

- name: Ensure robots directory exists
  file:
    path: "{{ nginx_robots_htdocs_path }}"
    state: directory
    mode: 0755
    owner: root
    group: wheel

- name: files to robots directory
  copy:
    src: "{{ item }}"
    dest: "{{ nginx_robots_htdocs_path }}"
    mode: 0644
    owner: root
    group: wheel
  with_items:
    - robots.disallow.txt
    - robots.dspace.txt
    - robots.repox.txt

- name: Push Diffie Hellman ephemeral parameters
  copy:
    content: |
      {{ lookup('file', tls_cert_path + '/dhparam.vault.yml') }}
    dest: "{{ nginx_key_path }}/dhparam.pem"
    mode: 0640
    owner: root
    group: wheel

- name: Set default SELinux context for robots
  command: >
    semanage fcontext -a -t httpd_sys_rw_content_t  "{{ nginx_robots_htdocs_path }}(/.*)?"
  become: true

- name: Restore default SELinux context for robots
  command: >
    restorecon -rv {{ nginx_robots_htdocs_path }}
  become: true

- name: Build a list of certs to deploy
  set_fact:
    nginx_certs: []

- name: Add all active certs to list of certs
  set_fact:
    nginx_certs: "{{ nginx_certs + [ item.cert_name ] }}"
  loop: "{{ nginx_sites }}"

- debug:
        msg: "'Processing the following unique certificates:'{{ nginx_certs |unique }}"

# Deploy certs based on our list of active certs
- include: assets-certs.yml
  with_items:
    - "{{ nginx_certs }}"
  when: ((nginx_certs is defined) and (nginx_certs is not none))
  tags:
    - nginx_assets
    - nginx_assets_certs
